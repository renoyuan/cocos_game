{"version":3,"sources":["file:///F:/cocos/cocos_game/game/03/airplane/assets/script/framework/AudioManager.ts"],"names":["_decorator","Component","AudioClip","AudioSource","ccclass","property","AudioManager","_dict","_audioSource","start","i","audioList","length","element","name","getComponent","play","audioClip","undefined","playOneShot"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;;;;;;;;;OAC3C;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;8BAOaM,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAAC,CAACH,SAAD,CAAD,C,2BAFb,MACaI,YADb,SACkCL,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA,eAIhCM,KAJgC,GAIb,EAJa;AAAA,eAKhCC,YALgC,GAKJ,IALI;AAAA;;AAOxCC,QAAAA,KAAK,GAAI;AACL,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,SAAL,CAAeC,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC5C,gBAAMG,OAAO,GAAG,KAAKF,SAAL,CAAeD,CAAf,CAAhB;AACA,iBAAKH,KAAL,CAAWM,OAAO,CAACC,IAAnB,IAA2BD,OAA3B;AACH;;AAED,eAAKL,YAAL,GAAoB,KAAKO,YAAL,CAAkBZ,WAAlB,CAApB;AACH;;AAEMa,QAAAA,IAAI,CAACF,IAAD,EAAc;AACrB,cAAMG,SAAS,GAAG,KAAKV,KAAL,CAAWO,IAAX,CAAlB;;AACA,cAAGG,SAAS,KAAKC,SAAjB,EAA2B;AACvB,iBAAKV,YAAL,CAAkBW,WAAlB,CAA8BF,SAA9B;AACH;AACJ,SArBuC,CAuBxC;AACA;AACA;;;AAzBwC,O;;;;;iBAER,E;;;AA0BpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, AudioClip, AudioSource } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n/**\r\n * Predefined variables\r\n * Name = AudioManager\r\n * DateTime = Fri Nov 26 2021 16:11:32 GMT+0800 (China Standard Time)\r\n * Author = mywayday\r\n * FileBasename = AudioManager.ts\r\n * FileBasenameNoExtension = AudioManager\r\n * URL = db://assets/script/framework/AudioManager.ts\r\n * ManualUrl = https://docs.cocos.com/creator/3.3/manual/en/\r\n *\r\n */\r\n\r\ninterface IAudioMap {\r\n    [name: string]: AudioClip;\r\n}\r\n\r\n@ccclass('AudioManager')\r\nexport class AudioManager extends Component {\r\n    @property([AudioClip])\r\n    public audioList: AudioClip[] = [];\r\n\r\n    private _dict: IAudioMap = {};\r\n    private _audioSource: AudioSource = null;\r\n\r\n    start () {\r\n        for (let i = 0; i < this.audioList.length; i++) {\r\n            const element = this.audioList[i];\r\n            this._dict[element.name] = element;\r\n        }\r\n\r\n        this._audioSource = this.getComponent(AudioSource);\r\n    }\r\n\r\n    public play(name: string){\r\n        const audioClip = this._dict[name];\r\n        if(audioClip !== undefined){\r\n            this._audioSource.playOneShot(audioClip);\r\n        }\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.3/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.3/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.3/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}