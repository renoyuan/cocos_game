{"version":3,"sources":["file:///F:/cocos/cocos_game/game/03/airplane/assets/script/plane/SlefPlane.ts"],"names":["_decorator","Component","input","Input","ccclass","property","SlefPlane","start","on","EventType","TOUCH_MOVE","onTouchMove","onTouchStart","event","delta","getDelta","pos","node","position","setPosition","x","spped","y","z","console","info","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAA0DC,MAAAA,K,OAAAA,K;AAAMC,MAAAA,K,OAAAA,K;;;;;;;;;OAC/E;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAGjBM,S,WADZF,OAAO,CAAC,WAAD,C,2BAAR,MACaE,SADb,SAC+BL,SAD/B,CACyC;AAAA;AAAA;;AAAA;AAAA;;AAIrCM,QAAAA,KAAK,GAAG;AAEJ;AACAL,UAAAA,KAAK,CAACM,EAAN,CAASL,KAAK,CAACM,SAAN,CAAgBC,UAAzB,EAAqC,KAAKC,WAA1C,EAAuD,IAAvD;AACH;;AAEDC,QAAAA,YAAY,CAAEC,KAAF,EAAoB,CAE5B;AAGH;;AACDF,QAAAA,WAAW,CAAGE,KAAH,EAAqB;AAC5B;AACA,cAAMC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAd;AACA,cAAIC,GAAG,GAAG,KAAKC,IAAL,CAAUC,QAApB;AACA,eAAKD,IAAL,CAAUE,WAAV,CAAsBH,GAAG,CAACI,CAAJ,GAAO,KAAKC,KAAL,GAAa,IAAb,GAAkBP,KAAK,CAACQ,CAArD,EAAwDN,GAAG,CAACM,CAA5D,EAA8DN,GAAG,CAACO,CAAJ,GAAQ,OAAK,KAAKF,KAAV,GAAkBP,KAAK,CAACM,CAA9F,EAJ4B,CAIsE;;AAClGI,UAAAA,OAAO,CAACC,IAAR,CAAaT,GAAb,EAAiB,KAAjB,EAAuB,OAAvB,EAA+BF,KAA/B,EAAqC,IAArC,EAA0CE,GAAG,CAACI,CAAJ,GAAM,KAAKC,KAAL,GAAa,IAAb,GAAkBP,KAAK,CAACM,CAAxE,EAA0EJ,GAAG,CAACM,CAA9E,EAAgFN,GAAG,CAACO,CAAJ,GAAO,OAAK,KAAKF,KAAV,GAAkBP,KAAK,CAACQ,CAA/G;AAEH;;AAEDI,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA3BoC,O,wEACpCtB,Q;;;;;iBACc,I","sourcesContent":["import { _decorator, Component, Node, SystemEvent,Touch,EventTouch,EventTarget,input,Input    } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('SlefPlane')\r\nexport class SlefPlane extends Component {\r\n    @property\r\n    public spped = 1000;\r\n\r\n    start() {\r\n        \r\n        // input.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        input.on(Input.EventType.TOUCH_MOVE, this.onTouchMove, this);\r\n    }\r\n    \r\n    onTouchStart( event: EventTouch){\r\n        \r\n        // 触碰开始\r\n        \r\n\r\n    }\r\n    onTouchMove(  event: EventTouch){\r\n        // 触碰移动\r\n        const delta = event.getDelta();\r\n        let pos = this.node.position;\r\n        this.node.setPosition(pos.x-(this.spped * 0.01*delta.y),pos.y,pos.z- (0.01*this.spped * delta.x)) //\r\n        console.info(pos,\"pos\",\"delta\",delta,\"坐标\",pos.x-this.spped * 0.01*delta.x,pos.y,pos.z- 0.01*this.spped * delta.y)\r\n        \r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}