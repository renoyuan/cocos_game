{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,uCAAD,EAAqJ,uCAArJ,EAAqQ,uCAArQ,EAA6W,uCAA7W,EAAsd,uCAAtd,EAAkjB,uCAAljB,EAAgpB,uCAAhpB,EAA4uB,uCAA5uB,EAA00B,uCAA10B,EAAo6B,uCAAp6B,EAAkgC,wCAAlgC,EAAkmC,wCAAlmC,EAAisC,wCAAjsC,EAAgyC,wCAAhyC,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///C:/ProgramData/cocos/editors/Creator/3.8.3/resources/resources/3d/engine/editor/assets/tools/debug-view-runtime-control.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/res/migration/use_v2.0.x_cc.Toggle_event.js\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/Controller/GameController.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/Controller/LoginController.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/View/CellView.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/View/EffecLayer.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/View/GridView.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/model/CellModel.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/model/Const.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/model/GameModel.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/unitTest/UnitTest.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/utils/AudioUtils.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/utils/ModelUtils.ts\"), () => import(\"file:///F:/cocos/cocos_game/game/04/match-3/assets/script/utils/Toast.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}