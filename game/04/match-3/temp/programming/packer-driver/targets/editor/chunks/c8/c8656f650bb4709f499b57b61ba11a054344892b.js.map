{"version":3,"sources":["file:///F:/cocos/cocos_game/game/04/match-3/assets/script/View/CellView.ts"],"names":["_decorator","Component","SpriteFrame","CELL_STATUS","CELL_WIDTH","CELL_HEIGHT","ANITIME","ccclass","property","GridView","Animation","isSelect","controller","onLoad","initWithModel","model","x","startX","y","startY","node","setPosition","status","COMMON","animation","pause","play","setController","updateView","cmd","length","actionArray","curTime","i","playTime","delay","push","action","pos","move","cc","moveTo","TOUCH_MOVE","v2","BIRD","getComponent","delayTime","BOMB_BIRD_DELAY","callFunc","destroy","isVisible","opacity","rotateRight","rotateBy","rotateLeft","repeat","sequence","keepTime","runAction","setSelect","flag","bg","getChildByName","Sprite","spriteFrame","defaultFrame","CLICK","active","start","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node ,v2,SpriteFrame, Vec2} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport {CELL_STATUS, CELL_WIDTH, CELL_HEIGHT, ANITIME} from '../model/Const';\r\n\r\n\r\n// 控制游戏内的网格元素特效\r\n@ccclass('GridView')\r\nexport class GridView extends Component {\r\n\r\n    @property(SpriteFrame)\r\n    public defaultFrame:SpriteFrame=null;\r\n\r\n \r\n\r\n    @property(Animation)\r\n    public animation:Animation=null;\r\n    \r\n    private isSelect =false;\r\n\r\n    public controller:Node = null;\r\n    onLoad () {\r\n        //this.model = null;\r\n        this.isSelect = false;\r\n    }\r\n    \r\n    initWithModel(model){\r\n        let x =CELL_WIDTH * (model.startX - 0.5);\r\n        let y = CELL_HEIGHT * (model.startY - 0.5) ;\r\n  \r\n        this.node.setPosition(x, y)\r\n       \r\n        \r\n        if (model.status == CELL_STATUS.COMMON){\r\n            this.animation.pause();\r\n        } \r\n        else{\r\n            this.animation.play();\r\n        }\r\n    }\r\n\r\n    setController(controller){\r\n        this.controller = controller;\r\n    }\r\n    \r\n    // 执行移动动作\r\n    updateView(model){\r\n        let cmd = model.cmd;\r\n        if(cmd.length <= 0){\r\n            return ;\r\n        }\r\n        let actionArray = [];\r\n        let curTime = 0;\r\n        for(var i in cmd){\r\n            if( cmd[i].playTime > curTime){\r\n                let delay =cmd[i].playTime - curTime;\r\n                actionArray.push(delay);\r\n            }\r\n            if(cmd[i].action == \"moveTo\"){\r\n                let x = (cmd[i].pos.x - 0.5) * CELL_WIDTH;\r\n                let y = (cmd[i].pos.y - 0.5) * CELL_HEIGHT;\r\n                var move = cc.moveTo(ANITIME.TOUCH_MOVE, cc.v2(x,y));\r\n                actionArray.push(move);\r\n            }\r\n            else if(cmd[i].action == \"toDie\"){\r\n                if(this.status == CELL_STATUS.BIRD){\r\n                    let animation = this.node.getComponent(cc.Animation);\r\n                    animation.play(\"effect\");\r\n                    actionArray.push(cc.delayTime(ANITIME.BOMB_BIRD_DELAY));\r\n                }\r\n                var callFunc = cc.callFunc(function(){\r\n                    this.node.destroy();\r\n                },this);\r\n                actionArray.push(callFunc);\r\n            }\r\n            else if(cmd[i].action == \"setVisible\"){\r\n                let isVisible = cmd[i].isVisible;\r\n                actionArray.push(cc.callFunc(function(){\r\n                    if(isVisible){\r\n                        this.node.opacity = 255;\r\n                    }\r\n                    else{\r\n                        this.node.opacity = 0;\r\n                    }\r\n                },this));\r\n            }\r\n            else if(cmd[i].action == \"toShake\"){\r\n                let rotateRight = cc.rotateBy(0.06,30);\r\n                let rotateLeft = cc.rotateBy(0.12, -60);\r\n                actionArray.push(cc.repeat(cc.sequence(rotateRight, rotateLeft, rotateRight), 2));\r\n            }\r\n            curTime = cmd[i].playTime + cmd[i].keepTime;\r\n        }\r\n       \r\n        if(actionArray.length == 1){\r\n            this.node.runAction(actionArray[0]);\r\n        }\r\n        else{\r\n            this.node.runAction(cc.sequence(...actionArray));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    setSelect(flag){\r\n        \r\n        let bg = this.node.getChildByName(\"select\");\r\n        if(flag == false && this.isSelect && this.model.status == CELL_STATUS.COMMON){\r\n            this.animation.pause();\r\n            this.node.getComponent(cc.Sprite).spriteFrame = this.defaultFrame;\r\n        }\r\n        else if(flag && this.model.status == CELL_STATUS.COMMON){\r\n            animation.play(CELL_STATUS.CLICK);\r\n        }\r\n        else if(flag && this.model.status == CELL_STATUS.BIRD){\r\n            animation.play(CELL_STATUS.CLICK);\r\n        }\r\n        bg.active = flag; \r\n        this.isSelect = flag;\r\n    }\r\n\r\n    start() {\r\n\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}