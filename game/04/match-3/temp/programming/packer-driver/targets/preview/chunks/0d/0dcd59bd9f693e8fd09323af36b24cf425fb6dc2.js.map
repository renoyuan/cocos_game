{"version":3,"sources":["file:///F:/cocos/cocos_game/game/04/match-3/assets/script/model/GameModel.ts"],"names":["GameModel","_decorator","v2","CellModel","mergePointArray","exclusivePoint","CELL_TYPE","CELL_BASENUM","CELL_STATUS","GRID_WIDTH","GRID_HEIGHT","ANITIME","ccclass","property","cells","cellBgs","lastPos","cellTypeNum","curTime","cellCreateType","changeModels","effectsQueue","init","setCellTypeNum","i","j","type","flag","getRandomCellType","result","checkPoint","length","setXY","setStartXY","mock","mockInit","A","B","x","y","initWithData","data","recursive","rowResult","checkWithDirection","colResult","samePoints","newCellStatus","BIRD","WRAP","LINE","COLUMN","subCheckPoints","point","subResult","direction","queue","vis","push","front","cellModel","tmpX","tmpY","printInfo","printStr","console","log","getCells","num","createTypeList","index","Math","floor","random","selectCell","pos","delta","abs","curClickCell","lastClickCell","exchangeCell","result1","result2","pushToChangeModels","isCanBomb","status","COMMON","moveToAndBack","moveTo","TOUCH_MOVE","processCrush","cycleCount","bombModels","pos1","pos2","model1","model2","bombModel","newCellType","crushPoint","model","crushCell","createNewCell","processBomb","DIE","down","setStatus","setVisible","newCheckPoint","curRow","k","count","indexOf","cleanCmd","cmd","tmpModel","newBombModel","bombTime","BOMB_DELAY","forEach","addRowBomb","addColBomb","crushType","BOMB_BIRD_DELAY","addCrushEffect","playTime","step","action","addWrapBomb","needShake","toShake","shakeTime","DIE_SHAKE","toDie"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, AudioSource, Button, v2, Vec2 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport CellModel from \"./CellModel\";\r\nimport { mergePointArray, exclusivePoint } from '../utils/ModelUtils';\r\nimport { CELL_TYPE, CELL_BASENUM, CELL_STATUS, GRID_WIDTH, GRID_HEIGHT, ANITIME } from \"./Const\";\r\n\r\n// 游戏主流程 移动后的效果\r\nexport class GameModel {\r\n    public cells = []\r\n\r\n    public cellBgs = 0\r\n    public lastPos: Vec2 = v2(-1, -1)\r\n    public cellTypeNum = 5\r\n    public curTime = 5\r\n    public cellCreateType = []; // 升成种类只在这个数组里面查找\r\n\r\n    public changeModels = [];// 发生改变的model，将作为返回值，给view播动作\r\n    public effectsQueue = []; // 动物消失，爆炸等特效\r\n\r\n\r\n    // init 界面\r\n    init(cellTypeNum) {\r\n        this.cells = [];\r\n        this.setCellTypeNum(cellTypeNum || this.cellTypeNum); // 设置种类\r\n\r\n        // 生成二维数组 9*9 填充空的 cellmodel\r\n        for (let i = 1; i <= GRID_WIDTH; i++) {\r\n            this.cells[i] = [];\r\n            for (let j = 1; j <= GRID_HEIGHT; j++) {\r\n                this.cells[i][j] = new CellModel();\r\n            }\r\n        }\r\n\r\n        // this.mock();\r\n\r\n        for (let i = 1; i <= GRID_WIDTH; i++) {\r\n            for (let j = 1; j <= GRID_HEIGHT; j++) {\r\n                //已经被mock数据生成了\r\n                if (this.cells[i][j].type != null) {\r\n                    continue;\r\n                }\r\n                let flag = true;\r\n                while (flag) {\r\n                    flag = false;\r\n\r\n                    this.cells[i][j].init(this.getRandomCellType()); //cellCreateType 中随机取\r\n\r\n\r\n                    let result = this.checkPoint(j, i)[0];\r\n                    if (result.length > 2) {\r\n                        flag = true;\r\n                    }\r\n                    this.cells[i][j].setXY(j, i);\r\n                    this.cells[i][j].setStartXY(j, i);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    mock() {\r\n        this.mockInit(5, 1, CELL_TYPE.A);\r\n        this.mockInit(5, 3, CELL_TYPE.A);\r\n        this.mockInit(4, 2, CELL_TYPE.A);\r\n        this.mockInit(3, 2, CELL_TYPE.A);\r\n        this.mockInit(5, 2, CELL_TYPE.B);\r\n        this.mockInit(6, 2, CELL_TYPE.B);\r\n        this.mockInit(7, 3, CELL_TYPE.B);\r\n        this.mockInit(8, 2, CELL_TYPE.A);\r\n    }\r\n    mockInit(x, y, type) {\r\n        this.cells[x][y].init(type)\r\n        this.cells[x][y].setXY(y, x);\r\n        this.cells[x][y].setStartXY(y, x);\r\n    }\r\n    initWithData(data) {\r\n        // to do\r\n    }\r\n\r\n\r\n    /**\r\n    *\r\n    * @param x\r\n    * @param y\r\n    * @param recursive 是否递归查找\r\n    * @returns {([]|string|*)[]}\r\n    */\r\n    checkPoint(x, y, recursive = true) {\r\n        let rowResult = this.checkWithDirection(x, y, [v2(1, 0), v2(-1, 0)]);\r\n        let colResult = this.checkWithDirection(x, y, [v2(0, -1), v2(0, 1)]);\r\n        let samePoints = [];\r\n        let newCellStatus = 0;\r\n        if (rowResult.length >= 5 || colResult.length >= 5) {\r\n            newCellStatus = CELL_STATUS.BIRD;\r\n        }\r\n        else if (rowResult.length >= 3 && colResult.length >= 3) {\r\n            newCellStatus = CELL_STATUS.WRAP;\r\n        }\r\n        else if (rowResult.length >= 4) {\r\n            newCellStatus = CELL_STATUS.LINE;\r\n        }\r\n        else if (colResult.length >= 4) {\r\n            newCellStatus = CELL_STATUS.COLUMN;\r\n        }\r\n        if (rowResult.length >= 3) {\r\n            samePoints = rowResult;\r\n        }\r\n        if (colResult.length >= 3) {\r\n            samePoints = mergePointArray(samePoints, colResult);\r\n        }\r\n        let result = [samePoints, newCellStatus, this.cells[y][x].type, v2(x, y)];\r\n        // 检查一下消除的其他节点， 能不能生成更大范围的消除\r\n        if (recursive && result.length >= 3) {\r\n            let subCheckPoints = exclusivePoint(samePoints, v2(x, y));\r\n            for (let point of subCheckPoints) {\r\n                let subResult = this.checkPoint(point.x, point.y, false);\r\n                if (subResult[1] > result[1] || (subResult[1] === result[1] && subResult[0].length > result[0].length)) {\r\n                    result = subResult;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    checkWithDirection(x, y, direction) {\r\n        let queue = [];\r\n        let vis = [];\r\n        vis[x + y * 9] = true;\r\n        queue.push(v2(x, y));\r\n        let front = 0;\r\n        while (front < queue.length) {\r\n            //let direction = [v2(0, -1), v2(0, 1), v2(1, 0), v2(-1, 0)];\r\n            let point = queue[front];\r\n            let cellModel = this.cells[point.y][point.x];\r\n            front++;\r\n            if (!cellModel) {\r\n                continue;\r\n            }\r\n            for (let i = 0; i < direction.length; i++) {\r\n                let tmpX = point.x + direction[i].x;\r\n                let tmpY = point.y + direction[i].y;\r\n                if (tmpX < 1 || tmpX > 9\r\n                    || tmpY < 1 || tmpY > 9\r\n                    || vis[tmpX + tmpY * 9]\r\n                    || !this.cells[tmpY][tmpX]) {\r\n                    continue;\r\n                }\r\n                if (cellModel.type === this.cells[tmpY][tmpX].type) {\r\n                    vis[tmpX + tmpY * 9] = true;\r\n                    queue.push(v2(tmpX, tmpY));\r\n                }\r\n            }\r\n        }\r\n        return queue;\r\n    }\r\n\r\n    printInfo() {\r\n        for (var i = 1; i <= 9; i++) {\r\n            var printStr = \"\";\r\n            for (var j = 1; j <= 9; j++) {\r\n                printStr += this.cells[i][j].type + \" \";\r\n            }\r\n            console.log(printStr);\r\n        }\r\n    }\r\n\r\n    getCells() {\r\n        return this.cells;\r\n    }\r\n\r\n\r\n    // 设置种类\r\n    // Todo 改成乱序算法\r\n    setCellTypeNum(num) {\r\n        console.log(\"num = \", num);\r\n        this.cellTypeNum = num;\r\n        this.cellCreateType = [];\r\n        let createTypeList = this.cellCreateType;\r\n        for (let i = 1; i <= CELL_BASENUM; i++) {\r\n            createTypeList.push(i);\r\n        }\r\n\r\n        for (let i = 0; i < createTypeList.length; i++) {\r\n            let index = Math.floor(Math.random() * (CELL_BASENUM - i)) + i;\r\n            createTypeList[i], createTypeList[index] = createTypeList[index], createTypeList[i]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // controller调用的主要入口\r\n    // 点击某个格子\r\n    selectCell(pos) {\r\n        this.changeModels = [];// 发生改变的model，将作为返回值，给view播动作\r\n        this.effectsQueue = []; // 动物消失，爆炸等特效\r\n        var lastPos = this.lastPos;\r\n        var delta = Math.abs(pos.x - lastPos.x) + Math.abs(pos.y - lastPos.y);\r\n        if (delta != 1) { //非相邻格子， 直接返回\r\n            this.lastPos = pos;\r\n            return [[], []];\r\n        }\r\n        let curClickCell = this.cells[pos.y][pos.x]; //当前点击的格子\r\n        let lastClickCell = this.cells[lastPos.y][lastPos.x]; // 上一次点击的格式\r\n        this.exchangeCell(lastPos, pos);\r\n        var result1 = this.checkPoint(pos.x, pos.y)[0];\r\n        var result2 = this.checkPoint(lastPos.x, lastPos.y)[0];\r\n        this.curTime = 0; // 动画播放的当前时间\r\n        this.pushToChangeModels(curClickCell);\r\n        this.pushToChangeModels(lastClickCell);\r\n        let isCanBomb = (curClickCell.status != CELL_STATUS.COMMON && // 判断两个是否是特殊的动物\r\n            lastClickCell.status != CELL_STATUS.COMMON) ||\r\n            curClickCell.status == CELL_STATUS.BIRD ||\r\n            lastClickCell.status == CELL_STATUS.BIRD;\r\n        if (result1.length < 3 && result2.length < 3 && !isCanBomb) {//不会发生消除的情况\r\n            this.exchangeCell(lastPos, pos);\r\n            curClickCell.moveToAndBack(lastPos);\r\n            lastClickCell.moveToAndBack(pos);\r\n            this.lastPos = v2(-1, -1);\r\n            return [this.changeModels];\r\n        }\r\n        else {\r\n            this.lastPos = v2(-1, -1);\r\n            curClickCell.moveTo(lastPos, this.curTime);\r\n            lastClickCell.moveTo(pos, this.curTime);\r\n            var checkPoint = [pos, lastPos];\r\n            this.curTime += ANITIME.TOUCH_MOVE;\r\n            this.processCrush(checkPoint);\r\n            return [this.changeModels, this.effectsQueue];\r\n        }\r\n    }\r\n\r\n    // 消除\r\n    processCrush(checkPoint) {\r\n        let cycleCount = 0;\r\n        while (checkPoint.length > 0) {\r\n            let bombModels = [];\r\n            if (cycleCount == 0 && checkPoint.length == 2) { //特殊消除\r\n                let pos1 = checkPoint[0];\r\n                let pos2 = checkPoint[1];\r\n                let model1 = this.cells[pos1.y][pos1.x];\r\n                let model2 = this.cells[pos2.y][pos2.x];\r\n                if (model1.status == CELL_STATUS.BIRD || model2.status == CELL_STATUS.BIRD) {\r\n                    let bombModel = null;\r\n                    if (model1.status == CELL_STATUS.BIRD) {\r\n                        model1.type = model2.type;\r\n                        bombModels.push(model1);\r\n                    }\r\n                    else {\r\n                        model2.type = model1.type;\r\n                        bombModels.push(model2);\r\n                    }\r\n\r\n                }\r\n            }\r\n            for (var i in checkPoint) {\r\n                var pos = checkPoint[i];\r\n                if (!this.cells[pos.y][pos.x]) {\r\n                    continue;\r\n                }\r\n                var [result, newCellStatus, newCellType, crushPoint] = this.checkPoint(pos.x, pos.y, true);\r\n\r\n                if (result.length < 3) {\r\n                    continue;\r\n                }\r\n                for (var j in result) {\r\n                    var model = this.cells[result[j].y][result[j].x];\r\n                    this.crushCell(result[j].x, result[j].y, false, cycleCount);\r\n                    if (model.status != CELL_STATUS.COMMON) {\r\n                        bombModels.push(model);\r\n                    }\r\n                }\r\n                this.createNewCell(crushPoint, newCellStatus, newCellType);\r\n\r\n            }\r\n            this.processBomb(bombModels, cycleCount);\r\n            this.curTime += ANITIME.DIE;\r\n            checkPoint = this.down();\r\n            cycleCount++;\r\n        }\r\n    }\r\n\r\n    //生成新cell\r\n    createNewCell(pos, status, type) {\r\n        if (status == \"\") {\r\n            return;\r\n        }\r\n        if (status == CELL_STATUS.BIRD) {\r\n            type = CELL_TYPE.BIRD\r\n        }\r\n        let model = new CellModel();\r\n        this.cells[pos.y][pos.x] = model\r\n        model.init(type);\r\n        model.setStartXY(pos.x, pos.y);\r\n        model.setXY(pos.x, pos.y);\r\n        model.setStatus(status);\r\n        model.setVisible(0, false);\r\n        model.setVisible(this.curTime, true);\r\n        this.changeModels.push(model);\r\n\r\n\r\n\r\n    }\r\n\r\n    // 下落\r\n    down() {\r\n        let newCheckPoint = [];\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                if (this.cells[i][j] == null) {\r\n                    var curRow = i;\r\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\r\n                        if (this.cells[k][j]) {\r\n                            this.pushToChangeModels(this.cells[k][j]);\r\n                            newCheckPoint.push(this.cells[k][j]);\r\n                            this.cells[curRow][j] = this.cells[k][j];\r\n                            this.cells[k][j] = null;\r\n                            this.cells[curRow][j].setXY(j, curRow);\r\n                            this.cells[curRow][j].moveTo(v2(j, curRow), this.curTime);\r\n                            curRow++;\r\n                        }\r\n                    }\r\n                    var count = 1;\r\n                    for (var k = curRow; k <= GRID_HEIGHT; k++) {\r\n                        this.cells[k][j] = new CellModel();\r\n                        this.cells[k][j].init(this.getRandomCellType());\r\n                        this.cells[k][j].setStartXY(j, count + GRID_HEIGHT);\r\n                        this.cells[k][j].setXY(j, count + GRID_HEIGHT);\r\n                        this.cells[k][j].moveTo(v2(j, k), this.curTime);\r\n                        count++;\r\n                        this.changeModels.push(this.cells[k][j]);\r\n                        newCheckPoint.push(this.cells[k][j]);\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        this.curTime += ANITIME.TOUCH_MOVE + 0.3\r\n        return newCheckPoint;\r\n    }\r\n    pushToChangeModels(model) {\r\n        if (this.changeModels.indexOf(model) != -1) {\r\n            return;\r\n        }\r\n        this.changeModels.push(model);\r\n    }\r\n\r\n    cleanCmd() {\r\n        for (var i = 1; i <= GRID_WIDTH; i++) {\r\n            for (var j = 1; j <= GRID_HEIGHT; j++) {\r\n                if (this.cells[i][j]) {\r\n                    this.cells[i][j].cmd = [];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    exchangeCell(pos1, pos2) {\r\n        var tmpModel = this.cells[pos1.y][pos1.x];\r\n        this.cells[pos1.y][pos1.x] = this.cells[pos2.y][pos2.x];\r\n        this.cells[pos1.y][pos1.x].x = pos1.x;\r\n        this.cells[pos1.y][pos1.x].y = pos1.y;\r\n        this.cells[pos2.y][pos2.x] = tmpModel;\r\n        this.cells[pos2.y][pos2.x].x = pos2.x;\r\n        this.cells[pos2.y][pos2.x].y = pos2.y;\r\n    }\r\n\r\n    // 随要生成一个类型\r\n    getRandomCellType() {\r\n        var index = Math.floor(Math.random() * this.cellTypeNum);\r\n        return this.cellCreateType[index];\r\n    }\r\n\r\n    // TODO bombModels去重\r\n    processBomb(bombModels, cycleCount) {\r\n        while (bombModels.length > 0) {\r\n            let newBombModel = [];\r\n            let bombTime = ANITIME.BOMB_DELAY;\r\n            bombModels.forEach(function (model) {\r\n                if (model.status == CELL_STATUS.LINE) {\r\n                    for (let i = 1; i <= GRID_WIDTH; i++) {\r\n                        if (this.cells[model.y][i]) {\r\n                            if (this.cells[model.y][i].status != CELL_STATUS.COMMON) {\r\n                                newBombModel.push(this.cells[model.y][i]);\r\n                            }\r\n                            this.crushCell(i, model.y, false, cycleCount);\r\n                        }\r\n                    }\r\n                    this.addRowBomb(this.curTime, v2(model.x, model.y));\r\n                }\r\n                else if (model.status == CELL_STATUS.COLUMN) {\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        if (this.cells[i][model.x]) {\r\n                            if (this.cells[i][model.x].status != CELL_STATUS.COMMON) {\r\n                                newBombModel.push(this.cells[i][model.x]);\r\n                            }\r\n                            this.crushCell(model.x, i, false, cycleCount);\r\n                        }\r\n                    }\r\n                    this.addColBomb(this.curTime, v2(model.x, model.y));\r\n                }\r\n                else if (model.status == CELL_STATUS.WRAP) {\r\n                    let x = model.x;\r\n                    let y = model.y;\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\r\n                            let delta = Math.abs(x - j) + Math.abs(y - i);\r\n                            if (this.cells[i][j] && delta <= 2) {\r\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\r\n                                    newBombModel.push(this.cells[i][j]);\r\n                                }\r\n                                this.crushCell(j, i, false, cycleCount);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if (model.status == CELL_STATUS.BIRD) {\r\n                    let crushType = model.type\r\n                    if (bombTime < ANITIME.BOMB_BIRD_DELAY) {\r\n                        bombTime = ANITIME.BOMB_BIRD_DELAY;\r\n                    }\r\n                    if (crushType == CELL_TYPE.BIRD) {\r\n                        crushType = this.getRandomCellType();\r\n                    }\r\n                    for (let i = 1; i <= GRID_HEIGHT; i++) {\r\n                        for (let j = 1; j <= GRID_WIDTH; j++) {\r\n                            if (this.cells[i][j] && this.cells[i][j].type == crushType) {\r\n                                if (this.cells[i][j].status != CELL_STATUS.COMMON) {\r\n                                    newBombModel.push(this.cells[i][j]);\r\n                                }\r\n                                this.crushCell(j, i, true, cycleCount);\r\n                            }\r\n                        }\r\n                    }\r\n                    //this.crushCell(model.x, model.y);\r\n                }\r\n            }, this);\r\n            if (bombModels.length > 0) {\r\n                this.curTime += bombTime;\r\n            }\r\n            bombModels = newBombModel;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n   * \r\n   * @param {开始播放的时间} playTime \r\n   * @param {*cell位置} pos \r\n   * @param {*第几次消除，用于播放音效} step \r\n   */\r\n    addCrushEffect(playTime, pos, step) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"crush\",\r\n            step\r\n        });\r\n    }\r\n\r\n    addRowBomb(playTime, pos) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"rowBomb\"\r\n        });\r\n    }\r\n\r\n    addColBomb(playTime, pos) {\r\n        this.effectsQueue.push({\r\n            playTime,\r\n            pos,\r\n            action: \"colBomb\"\r\n        });\r\n    }\r\n\r\n    addWrapBomb(playTime, pos) {\r\n        // TODO\r\n    }\r\n\r\n    // cell消除逻辑\r\n    crushCell(x, y, needShake, step) {\r\n        let model = this.cells[y][x];\r\n        this.pushToChangeModels(model);\r\n        if (needShake) {\r\n            model.toShake(this.curTime)\r\n        }\r\n\r\n        let shakeTime = needShake ? ANITIME.DIE_SHAKE : 0;\r\n        model.toDie(this.curTime + shakeTime);\r\n        this.addCrushEffect(this.curTime + shakeTime, v2(model.x, model.y), step);\r\n        this.cells[y][x] = null;\r\n    }\r\n\r\n}\r\n\r\n\r\n"]}