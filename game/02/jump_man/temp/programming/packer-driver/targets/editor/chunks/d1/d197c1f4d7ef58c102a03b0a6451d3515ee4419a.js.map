{"version":3,"sources":["file:///F:/cocos/cocos_game/game/02/jump_man/assets/Scipte/PlayerController.ts"],"names":["_decorator","Component","Node","input","Input","Vec3","Animation","SkeletalAnimation","AudioClip","AudioSource","ccclass","property","PlayerController","type","_startJump","_jumpStep","_curJumpTime","_jumpTime","_curJumpSpeed","_curPos","_lastPos","_deltaPos","_targetPos","_curMoveIndex","playOneShot","audioSource","clip","start","reset","stayTime","setInputActive","active","on","EventType","MOUSE_UP","onMouseUp","OneTouch","TOUCH_START","onTouchStart","TwoTouch","off","event","getButton","jumpByStep","target","name","console","log","step","node","getPosition","add","CocosAnim","getState","speed","play","onOnceJumpEnd","deltaTime","emit","update","setPosition","x"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, input, Input, EventMouse,EventTouch, Vec3,Animation,SkeletalAnimation,AudioClip,AudioSource    } from 'cc';\r\n// import {AudioMgr} from \"./AudioMgr\"\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n    @property({type: SkeletalAnimation})\r\n    public CocosAnim: SkeletalAnimation|null = null;\r\n    // 添加动画属性\r\n    @property({type: Animation})\r\n    public BodyAnim: Animation | null = null;\r\n\r\n    // 跳跃音效资源\r\n    @property(AudioClip)\r\n    public clip: AudioClip = null!;\r\n    // 音效控制\r\n    @property(AudioSource)\r\n    public audioSource: AudioSource = null!;\r\n    \r\n    // 触碰节点\r\n    @property(Node)\r\n    OneTouch: Node = null;\r\n\r\n    @property(Node)\r\n    TwoTouch: Node = null;\r\n\r\n    // private audioMgr: AudioMgr = null!;\r\n    \r\n    // 是否接收到跳跃指令\r\n    private _startJump: boolean = false;\r\n    // 跳跃步长\r\n    private _jumpStep: number = 0;\r\n    // 当前跳跃时间\r\n    private _curJumpTime: number = 0;\r\n    // 每次跳跃时长\r\n    private _jumpTime: number = 0.3;\r\n    // 当前跳跃速度\r\n    private _curJumpSpeed: number = 0;\r\n    // 当前角色位置\r\n    private _curPos: Vec3 = new Vec3();\r\n    // 当前角色上一个位置\r\n    private _lastPos: Vec3 = new Vec3();\r\n    // 每次跳跃过程中，当前帧移动位置差\r\n    private _deltaPos: Vec3 = new Vec3(0, 0, 0);\r\n    // 角色目标位置\r\n    private _targetPos: Vec3 = new Vec3();\r\n\r\n    private _curMoveIndex = 0;\r\n\r\n    // 播放音效\r\n    playOneShot () {\r\n        // this.audioMgr.playOneShot(this.clip, 1);\r\n        this.audioSource.playOneShot(this.clip, 1);\r\n    }\r\n    // 停留时间\r\n    @property\r\n    public stayTime = 0;\r\n\r\n    start() {\r\n        // input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n    }\r\n\r\n    reset() {\r\n        // 清空步数以及等待时间\r\n        this._curMoveIndex = 0;\r\n        this.stayTime=0\r\n    }\r\n\r\n    // 激活鼠标监控 主程序控制\r\n    setInputActive(active: boolean) {\r\n        if (active) {\r\n            input.on(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n            this.OneTouch.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n            this.TwoTouch.on(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        } else {\r\n            input.off(Input.EventType.MOUSE_UP, this.onMouseUp, this);\r\n            this.OneTouch.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n            this.TwoTouch.off(Input.EventType.TOUCH_START, this.onTouchStart, this);\r\n        }\r\n    }\r\n    \r\n    //   监控鼠标事件在 EventMouse\r\n    onMouseUp(event: EventMouse) {\r\n        \r\n        // 如果是鼠标左键，那么 getButton 方法会返回 0，而如果是右键，则返回 2。\r\n        if (event.getButton() === 0) {\r\n            this.jumpByStep(1);\r\n        }else if (event.getButton() === 2) {\r\n            this.jumpByStep(2);\r\n        }\r\n\r\n    }\r\n\r\n    \r\n \r\n\r\n    // 监控触摸事件 回调\r\n    onTouchStart(event: EventTouch) {\r\n        const target = event.target as Node;        \r\n        if (target?.name == 'OneTouch') {\r\n            this.jumpByStep(1);\r\n        } else if (target?.name == 'TwoTouch') {\r\n            this.jumpByStep(2);\r\n        }\r\n        else{\r\n            console.log(\"无效touch\")\r\n        }\r\n    }\r\n\r\n    //计算目标位置、速度的方法 移动 && 运行动画\r\n    jumpByStep(step: number) {\r\n        \r\n        // 执行跳跃中则不运行动画\r\n        if (this._startJump) {\r\n            return;\r\n        }\r\n        this._startJump = true; // 表示开始跳跃\r\n        this._jumpStep = step; // 本次跳跃的步数\r\n        this._curJumpTime = 0; // 重置下跳跃的时间\r\n        this._curJumpSpeed = this._jumpStep / this._jumpTime; // 计算跳跃的速度\r\n        this.node.getPosition(this._curPos); // 获取角色当前的位置放入this._curPos\r\n        \r\n        // 计算目标位置 目标位置 = 当前位置 + 步长 向量加法 结果存在 _targetPos 中\r\n        Vec3.add(this._targetPos, this._curPos, new Vec3(this._jumpStep, 0, 0));  \r\n\r\n        // 播放动画\r\n        if (this.CocosAnim) {\r\n            if (step === 1 || step === 2){\r\n                this.playOneShot()\r\n                this.CocosAnim.getState('cocos_anim_jump').speed = 3.5; // 跳跃动画时间比较长，这里加速播放\r\n                this.CocosAnim.play('cocos_anim_jump'); // 播放跳跃动画\r\n\r\n            }\r\n           \r\n        }\r\n        // if (this.BodyAnim) {\r\n        //     if (step === 1) {\r\n        //         this.BodyAnim.play('oneStep');\r\n        //     } else if (step === 2) {\r\n        //         this.BodyAnim.play('twoStep');\r\n        //     }\r\n        //     this._curMoveIndex += step;\r\n        // }\r\n\r\n        this._curMoveIndex += step;\r\n    }\r\n\r\n    // 跳跃结束，执行待机动画\r\n    onOnceJumpEnd(deltaTime) {\r\n        \r\n        if (this.CocosAnim) {\r\n            this.CocosAnim.getState('cocos_anim_idle').speed = 3.5;\r\n            this.CocosAnim.play('cocos_anim_idle');\r\n        }\r\n        this.node.emit('JumpEnd', this._curMoveIndex,deltaTime);\r\n    }\r\n\r\n\r\n\r\n    //游戏循环 \r\n    update(deltaTime: number): void {\r\n\r\n        // 处理跳跃的分支逻辑\r\n        if( this._startJump){ \r\n            // console.log(\"deltaTime\",deltaTime)\r\n            this._curJumpTime += deltaTime;     // 更新_curJumpTime\r\n\r\n            if (this._curJumpTime > this._jumpTime) { // 跳跃结束 更新位置\r\n                \r\n                this._lastPos= this._curPos; // 更新上一步位置&& 清空等待时间\r\n                this.stayTime = 0;\r\n                this.node.setPosition(this._targetPos);  // 强制位移到目标位置\r\n                this._startJump = false; // 标记跳跃结束\r\n                this.onOnceJumpEnd(deltaTime); // 执行待机动画\r\n            } else { // 执行跳跃动画\r\n                // tween\r\n                this.node.getPosition(this._curPos);  // 获取当前的位置 \r\n                this._deltaPos.x = this._curJumpSpeed * deltaTime; // 计算本帧应该位移的长度\r\n                Vec3.add(this._curPos, this._curPos, this._deltaPos); // 将当前位置加上位移的长度\r\n                this.node.setPosition(this._curPos); // 设置位移后的位置               \r\n                }  \r\n        } \r\n        else{\r\n            if (this._lastPos){\r\n                // 记录停滞时间\r\n                this.stayTime += deltaTime\r\n            }\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}