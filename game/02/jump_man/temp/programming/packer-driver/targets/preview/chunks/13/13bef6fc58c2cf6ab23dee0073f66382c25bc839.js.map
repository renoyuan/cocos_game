{"version":3,"sources":["file:///F:/cocos/cocos_game/game/02/jump_man/assets/Scipte/GameManager.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Vec3","Label","PlayerController","ccclass","property","GameState","BlockType","GameManager","type","_road","timer","start","EndPanel","active","curState","GS_INIT","playerCtrl","node","on","onPlayerJumpEnd","moveIndex","deltaTime","stepsLabel","string","endLabel","toFixed","checkResult","init","startMenu","generateRoad","setInputActive","setPosition","ZERO","reset","roadTurn","onStartButtonClicked","GS_PLAYING","onEndButtonClicked","gameEnd","console","info","roadLength","BT_NONE","CocosAnim","getState","speed","play","value","setTimeout","GS_END","removeAllChildren","push","BT_STONE","i","_last_indx","Math","floor","random","j","_indx","block","spawnBlockByType","addChild","cubePrfb","update","stayTime","stayOverTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node ,Prefab,instantiate,CCInteger,Vec3,Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\nimport { PlayerController } from \"./PlayerController\";\r\n\r\n\r\nenum GameState{\r\n    GS_INIT,\r\n    GS_PLAYING,\r\n    GS_END,\r\n};\r\n\r\n// 赛道格子类型，坑（BT_NONE）或者实路（BT_STONE）\r\nenum BlockType{\r\n    BT_NONE = 0,\r\n    BT_STONE = 1 ,\r\n};\r\n\r\n\r\n\r\n@ccclass('GameManager')\r\nexport class GameManager extends Component {\r\n    \r\n    \r\n    \r\n    // 开始菜单\r\n    @property({type: Node})\r\n    public startMenu: Node | null = null;\r\n    //分数\r\n    @property({type: Label})\r\n    public stepsLabel: Label | null = null;\r\n\r\n\r\n    // 结算面板 游戏结束时显示 步数 耗时 分数 \r\n    @property({type: Node})\r\n    public EndPanel: Node | null = null;\r\n\r\n    //分数\r\n    @property({type: Label})\r\n    public endLabel: Label | null = null;\r\n\r\n    // 角色\r\n    @property({type: PlayerController})\r\n    public playerCtrl: PlayerController | null = null;\r\n    \r\n    // 赛道预制\r\n    @property({type: Prefab})\r\n    public cubePrfb: Prefab | null = null;\r\n\r\n    // 赛道长度\r\n    @property\r\n    public roadLength = 10;\r\n\r\n    // 赛道轮次\r\n    @property\r\n    public roadTurn = 1;\r\n\r\n    _road: BlockType[] = [];\r\n    \r\n    // 持续时间\r\n    @property\r\n    public stayOverTime = 10\r\n\r\n    // 计时器\r\n    timer = 0; \r\n\r\n    \r\n    start() {\r\n         // 隐藏面板\r\n         if ( this.EndPanel){\r\n            this.EndPanel.active = false; \r\n        }\r\n        this.curState = GameState.GS_INIT; // 初始化游戏状态\r\n        // '?.' 是 Typescript 的可选链写法\r\n        //== if(this.playerCtrl != null) this.playerCtrl.node.on('JumpEnd', this.onPlayerJumpEnd, this);  回调       \r\n        this.playerCtrl?.node.on('JumpEnd', this.onPlayerJumpEnd, this);\r\n    }\r\n    \r\n    onPlayerJumpEnd(moveIndex: number,deltaTime: number) {\r\n        if (this.stepsLabel) {\r\n            // 因为在最后一步可能出现步伐大的跳跃，但是此时无论跳跃是步伐大还是步伐小都不应该多增加分数\r\n            // this.stepsLabel.string = '' + (moveIndex >= this.roadLength ? this.roadLength : moveIndex);\r\n            this.stepsLabel.string = '' + moveIndex;\r\n        }\r\n        if (this.EndPanel){\r\n            this.endLabel.string = `步数: ${moveIndex} \\n 时长: ${deltaTime.toFixed(2)} ` ;\r\n        }\r\n        this.checkResult(moveIndex);\r\n    }\r\n\r\n\r\n    init() {\r\n       \r\n        // 激活主界面\r\n        if (this.startMenu) {\r\n            this.startMenu.active = true;\r\n        }\r\n       \r\n        \r\n        // 生成赛道\r\n        this.generateRoad();\r\n        if(this.playerCtrl){\r\n            // 禁止接收用户操作人物移动指令\r\n            this.playerCtrl.setInputActive(false);\r\n            // 重置人物位置\r\n            this.playerCtrl.node.setPosition(Vec3.ZERO);\r\n            // 重置分数\r\n            this.playerCtrl.reset();\r\n            // 重置赛道轮次\r\n            this.roadTurn = 1\r\n        }\r\n        \r\n    }\r\n\r\n    // 点击监控\r\n    onStartButtonClicked() {\r\n        this.curState = GameState.GS_PLAYING;\r\n    }\r\n    onEndButtonClicked() {\r\n        this.EndPanel.active = false; \r\n        // this.curState = GameState.GS_INIT;\r\n    }\r\n\r\n    gameEnd(){\r\n        console.info(\"展示结算面板\",this.EndPanel);\r\n        this.EndPanel.active = true; \r\n\r\n        // 重新开始\r\n        this.curState = GameState.GS_INIT;\r\n    }\r\n    checkResult(moveIndex: number) {\r\n        if (moveIndex < (this.roadLength*this.roadTurn) -1 ) {\r\n            // 跳到了坑上\r\n            if (this._road[moveIndex] == BlockType.BT_NONE) {\r\n                console.info(\"跳到了坑上\",moveIndex,BlockType.BT_NONE)\r\n                console.info(this._road)\r\n                if (this.playerCtrl.CocosAnim) {\r\n                        this.playerCtrl.CocosAnim.getState('cocos_anim_die').speed = 2; // 跳跃动画时间比较长，这里加速播放\r\n                        this.playerCtrl.CocosAnim.play('cocos_anim_die'); // 播放跳跃动画\r\n                        \r\n        \r\n                    }\r\n                   \r\n                \r\n                this.gameEnd()\r\n            }\r\n        } else if(moveIndex === (this.roadLength*this.roadTurn) -1){\r\n            this.roadTurn+=1;\r\n            console.info(\"生成新的赛道\",this.roadTurn);\r\n            this.generateRoad();\r\n\r\n        }\r\n\r\n        else {    \r\n            // 取消最大长度限制，生成新的赛道--跳过了最大长度\r\n            // this.curState = GameState.GS_INIT;\r\n            \r\n           \r\n        }\r\n    }\r\n\r\n    set curState (value: GameState) {\r\n        switch(value) {\r\n            case GameState.GS_INIT:\r\n                this.init();\r\n                break;\r\n            case GameState.GS_PLAYING:\r\n                if (this.startMenu) {\r\n                    this.startMenu.active = false;\r\n                }\r\n                if (this.stepsLabel) {\r\n                    this.stepsLabel.string = '0';   // 将步数重置为0\r\n                }\r\n                // 设置 active 为 true 时会直接开始监听鼠标事件，此时鼠标抬起事件还未派发\r\n                // 会出现的现象就是，游戏开始的瞬间人物已经开始移动\r\n                // 因此，这里需要做延迟处理\r\n                setTimeout(() => {\r\n                    if (this.playerCtrl) {\r\n                        this.playerCtrl.setInputActive(true);\r\n                    }\r\n                }, 0.1);\r\n                break;\r\n            case GameState.GS_END:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    // 生成赛道\r\n    generateRoad() {\r\n\r\n        // 防止游戏重新开始时，赛道还是旧的赛道\r\n        // 因此，需要移除旧赛道，清除旧赛道数据\r\n        if (this.roadTurn>1) {\r\n            \r\n        } else{\r\n            this.node.removeAllChildren();\r\n            this._road = [];\r\n        };\r\n        \r\n        \r\n\r\n        // 确保游戏运行时，人物一定站在实路上\r\n        this._road.push(BlockType.BT_STONE);\r\n\r\n        // 确定好 1-8 格赛道类型 \r\n        for (let i = 1; i < this.roadLength -1; i++) {\r\n            // 如果上一格赛道是坑，那么这一格一定不能为坑\r\n            let _last_indx = ((this.roadTurn-1)*this.roadLength)+ i -1\r\n            if (this._road[ _last_indx] === BlockType.BT_NONE) {\r\n                this._road.push(BlockType.BT_STONE);\r\n            } else {\r\n                this._road.push(Math.floor(Math.random() * 2)); // 随机出现 0 1 \r\n            }\r\n        }\r\n        // 最后一格也必须是石路，方便这里生成新的赛道\r\n        this._road.push(BlockType.BT_STONE);\r\n\r\n\r\n        // 根据赛道类型生成赛道\r\n        for (let j = 0; j < this.roadLength; j++) {\r\n            let _indx = ((this.roadTurn-1)*this.roadLength)+j\r\n            let block: Node = this.spawnBlockByType(this._road[_indx]);\r\n            // 判断是否生成了道路，因为 spawnBlockByType 有可能返回坑（值为 null）\r\n            if (block) {\r\n                this.node.addChild(block);\r\n                block.setPosition(_indx, -1.5, 0);\r\n                console.info(\"设置道路\", _indx )\r\n            }\r\n        }\r\n        \r\n        }\r\n    \r\n    // 生成石块\r\n    spawnBlockByType(type: BlockType) {\r\n        if (!this.cubePrfb) {\r\n            return null;\r\n        }\r\n    \r\n        let block: Node | null = null;\r\n        // 赛道类型为实路才生成\r\n        switch(type) {\r\n            case BlockType.BT_STONE:\r\n                block = instantiate(this.cubePrfb);\r\n                break;\r\n        }\r\n    \r\n        return block;\r\n    }\r\n    update(deltaTime: number) {\r\n        // 如果在 一个位置停留时间超过 设置时间 则 gameover ok\r\n        // console.info(\"this.startMenu.active\",this.startMenu.active,\"deltaTime\",deltaTime ,\"this.playerCtrl.stayTime\", this.playerCtrl.stayTime,\"stayOverTime\",this.stayOverTime)\r\n        if (!this.startMenu.active && this.playerCtrl.stayTime > this.stayOverTime ){\r\n            console.info(\"停留超时\");\r\n            this.gameEnd();\r\n            \r\n        }\r\n        \r\n\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]}